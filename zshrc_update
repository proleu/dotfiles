# Somewhat unsafely check for .bashrc and collect any PATH mods from it
if [ -f "$HOME/.bashrc" ]; then
    grep 'export PATH=' "$HOME/.bashrc" | while read -r line; do
        case "$line" in
            export\ PATH=*) eval "$line" ;;
            *) ;;
        esac
    done
fi

# Add uv to PATH if installed
if [ -d "$HOME/.cargo/bin" ]; then
    export PATH="$HOME/.cargo/bin:$PATH"
fi

# Add local bin to PATH for uv tools and pipx
if [ -d "$HOME/.local/bin" ]; then
    export PATH="$HOME/.local/bin:$PATH"
fi

# Auto-activate global Python environment if not already in a virtual environment
if [ -z "$VIRTUAL_ENV" ] && [ -f "$HOME/.local/bin/activate-pipenv-global" ]; then
    source "$HOME/.local/bin/activate-pipenv-global"
fi

# Auto-activate pipenv shell if Pipfile exists
function auto_pipenv_shell() {
    if [ -f "Pipfile" ]; then
        if [ "$PIPENV_ACTIVE" != "1" ]; then
            echo "Pipfile detected, activating pipenv shell..."
            pipenv shell
        fi
    fi
}

# Add the auto-activate function to directory change hook
chpwd_functions=(${chpwd_functions[@]} "auto_pipenv_shell")

# History
setopt histignorealldups sharehistory
HISTSIZE=SAVEHIST=10000
HISTFILE=$HOME/.zsh_history

# Theme
ZSH_THEME="robbyrussell"

# Paths
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src
export ZSH="$HOME/.oh-my-zsh"

# Plugins
plugins=(
    fzf 
    git 
    history-substring-search 
    ohmyzsh-full-autoupdate 
    zsh-autosuggestions 
    zsh-completions 
    zsh-vi-mode
)

# Source Oh-My-Zsh
source $ZSH/oh-my-zsh.sh

# User Configuration
export EDITOR='nvim'

# Aliases
alias b="cd .."
alias bb="cd ../.."
alias bbb="cd ../../.."
alias bbbb="cd ../../../.."
alias bbbbb="cd ../../../../.."
alias bbbbbb="cd ../../../../../.."
alias lzd="lazydocker"
alias pnuke="perl -e 'for(<*>){unlink}'"
alias so="source $HOME/.zshrc"

# Functions
function count_pdbs() { find -type f -name "*.pdb*" | wc -l; }
function fetch() { wget http://www.rcsb.org/pdb/files/$1.pdb.gz || wget ftp://ftp.wwpdb.org/pub/pdb/data/structures/all/pdb/pdb$1.ent.gz; }
function gh_auth() { BROWSER=false gh auth login --web }
function mcd() { mkdir -p $1; cd $1; }
function swap() {
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

function fetch_aws_batch_logs() {
    local log_stream_name=$1
    local cmd="aws logs get-log-events --log-group-name /aws/batch/job --log-stream-name ${log_stream_name} --start-from-head --output text"
    local response=$(eval "$cmd") || return 1

    while :; do
        if [[ $(wc -l <<< "$response") -eq 1 ]]; then
            break
        fi

        tail -n +2 <<< "$response"
        local meta=($(head -n 1 <<< "$response"))
        response=$(eval "$cmd --next-token ${meta[1]}") || return 1
    done
}
